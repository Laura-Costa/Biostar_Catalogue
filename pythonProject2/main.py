from flask import Flask, render_template
import mysql.connector
import math
import matplotlib.pyplot
import csv

connection = mysql.connector.connect(host='localhost', port='3306', database='gaia_catalogue_1', user='helena', password='ic2023IC*')
cursor = connection.cursor()

app = Flask(__name__)
@app.route("/")
def index():
    return render_template("index.html")

@app.route("/gaia/")
def gaia():
    cursor.execute("select Gaia.designation, "
                   "Gaia.HIP, "
                   "Gaia.HD, "
                   "round(Gaia.ra, 4), "
                   "round(Gaia.declination, 4), "
                   "round(Gaia.parallax, 4), "
                   "round(Gaia.parallax_error, 4), "
                   "round(Gaia.pm, 4), "
                   "round(Gaia.pmra, 4), "
                   "round(Gaia.pmdec, 4), "
                   "round(Gaia.ruwe, 4), "
                   "round(Gaia.phot_g_mean_mag, 4), "
                   "round(Gaia.phot_bp_mean_mag, 4), "
                   "round(Gaia.phot_rp_mean_mag, 4), "
                   "round(Gaia.teff_gspphot, 4), "
                   "round(Gaia.teff_gspphot_lower, 4), "
                   "round(Gaia.teff_gspphot_upper, 4), "
                   "round(Gaia.logg_gspphot, 4), "
                   "round(Gaia.logg_gspphot_lower, 4), "
                   "round(Gaia.logg_gspphot_upper, 4), "
                   "round(Gaia.mh_gspphot, 4), "
                   "round(Gaia.mh_gspphot_lower, 4), "
                   "round(Gaia.mh_gspphot_upper, 4), "
                   "round(Gaia.distance_gspphot, 4), "
                   "round(Gaia.distance_gspphot_lower, 4), "
                   "round(Gaia.distance_gspphot_upper, 4), "
                   "round(Gaia_product.Mg, 4), "
                   "round(Gaia_product.Mg_error, 4), "
                   "round(Gaia_product.MRp, 4), "
                   "round(Gaia_product.MRp_error, 4), "
                   "round(Gaia_product.Bp_minus_Rp, 4) "
                   "from Gaia, Gaia_product "
                   "where Gaia.designation = Gaia_product.designation "
                   "order by Gaia.designation")
    value = cursor.fetchall()
    name = "Gaia"
    data = (value, len(value))
    return render_template("gaia.html", data=data, name=name)

@app.route("/hipparcos/")
def hipparcos():
    data = []
    cursor.execute("select Hipparcos.HIP, "
                   "Hipparcos.HD, "
                   "IF (Hipparcos.HIP in ( "
                   "select Gaia.HIP from Gaia where Gaia.HIP is not NULL), "
                   "(select Gaia.designation from Gaia where Gaia.HIP = Hipparcos.HIP), NULL) AS designation, "
                   "round(Hipparcos.Vmag, 4), "
                   "round(Hipparcos.RAdeg, 4), "
                   "round(Hipparcos.DEdeg, 4), "
                   "Hipparcos.RAhms, "
                   "Hipparcos.DEdms, "
                   "round(Hipparcos.Plx, 4), "
                   "round(Hipparcos.e_Plx, 4), "
                   "round(1/(Hipparcos.Plx/1000.0), 4) AS distance_Plx, "
                   "round(Hipparcos.pmRA, 4), "
                   "round(Hipparcos.pmDE, 4), "
                   "round(Hipparcos.BTmag, 4), "
                   "round(Hipparcos.VTmag, 4), "
                   "round(Hipparcos_product.MV, 4), "
                   "round(Hipparcos_product.MV_error, 4), "
                   "round(Hipparcos_product.MVt, 4), "
                   "round(Hipparcos_product.MVt_error, 4), "
                   "round(Hipparcos_product.B_minus_V, 4), "
                   "round(Hipparcos_product.BT_minus_VT, 4) "
                   "from Hipparcos, Hipparcos_product "
                   "where Hipparcos.HIP = Hipparcos_product.HIP and "
                   "Hipparcos_product.MV is not NULL and "
                   "Hipparcos_product.B_minus_V is not NULL "
                   "order by Hipparcos.HIP")
    value = cursor.fetchall()
    data.append(value)
    data.append(len(value))

    cursor.execute("select Hipparcos.HIP, "
                   "Hipparcos.HD, "
                   "IF (Hipparcos.HIP in ( "
                   "select Gaia.HIP from Gaia where Gaia.HIP is not NULL), "
                   "(select Gaia.designation from Gaia where Gaia.HIP = Hipparcos.HIP), NULL) AS designation, "
                   "round(Hipparcos.Vmag, 4), "
                   "round(Hipparcos.RAdeg, 4), "
                   "round(Hipparcos.DEdeg, 4), "
                   "Hipparcos.RAhms, "
                   "Hipparcos.DEdms, "
                   "round(Hipparcos.Plx, 4), "
                   "round(Hipparcos.e_Plx, 4), "
                   "round(1/(Hipparcos.Plx/1000.0), 4) AS distance_Plx, "
                   "round(Hipparcos.pmRA, 4), "
                   "round(Hipparcos.pmDE, 4), "
                   "round(Hipparcos.BTmag, 4), "
                   "round(Hipparcos.VTmag, 4), "
                   "round(Hipparcos_product.MV, 4), "
                   "round(Hipparcos_product.MV_error, 4), "
                   "round(Hipparcos_product.MVt, 4), "
                   "round(Hipparcos_product.MVt_error, 4), "
                   "round(Hipparcos_product.B_minus_V, 4), "
                   "round(Hipparcos_product.BT_minus_VT, 4) "
                   "from Hipparcos, Hipparcos_product "
                   "where Hipparcos.HIP = Hipparcos_product.HIP and "
                   "(Hipparcos_product.MV is NULL or "
                   "Hipparcos_product.B_minus_V is NULL) "
                   "order by Hipparcos.HIP")
    value = cursor.fetchall()
    data.append(value)
    data.append(len(value))

    cursor.execute("select Hipparcos.HIP, "
                   "Hipparcos.HD, "
                   "IF (Hipparcos.HIP in ( "
                   "select Gaia.HIP from Gaia where Gaia.HIP is not NULL), "
                   "(select Gaia.designation from Gaia where Gaia.HIP = Hipparcos.HIP), NULL) AS designation, "
                   "round(Hipparcos.Vmag, 4), "
                   "round(Hipparcos.RAdeg, 4), "
                   "round(Hipparcos.DEdeg, 4), "
                   "Hipparcos.RAhms, "
                   "Hipparcos.DEdms, "
                   "round(Hipparcos.Plx, 4), "
                   "round(Hipparcos.e_Plx, 4), "
                   "round(1/(Hipparcos.Plx/1000.0), 4) AS distance_Plx, "
                   "round(Hipparcos.pmRA, 4), "
                   "round(Hipparcos.pmDE, 4), "
                   "round(Hipparcos.BTmag, 4), "
                   "round(Hipparcos.VTmag, 4), "
                   "round(Hipparcos_product.MV, 4), "
                   "round(Hipparcos_product.MV_error, 4), "
                   "round(Hipparcos_product.MVt, 4), "
                   "round(Hipparcos_product.MVt_error, 4), "
                   "round(Hipparcos_product.B_minus_V, 4), "
                   "round(Hipparcos_product.BT_minus_VT, 4) "
                   "from Hipparcos, Hipparcos_product "
                   "where Hipparcos.HIP = Hipparcos_product.HIP and "
                   "Hipparcos_product.MVt is not NULL and "
                   "Hipparcos_product.BT_minus_VT is not NULL "
                   "order by Hipparcos.HIP")
    value = cursor.fetchall()
    data.append(value)
    data.append(len(value))

    cursor.execute("select Hipparcos.HIP, "
                   "Hipparcos.HD, "
                   "IF (Hipparcos.HIP in ( "
                   "select Gaia.HIP from Gaia where Gaia.HIP is not NULL), "
                   "(select Gaia.designation from Gaia where Gaia.HIP = Hipparcos.HIP), NULL) AS designation, "
                   "round(Hipparcos.Vmag, 4), "
                   "round(Hipparcos.RAdeg, 4), "
                   "round(Hipparcos.DEdeg, 4), "
                   "Hipparcos.RAhms, "
                   "Hipparcos.DEdms, "
                   "round(Hipparcos.Plx, 4), "
                   "round(Hipparcos.e_Plx, 4), "
                   "round(1/(Hipparcos.Plx/1000.0), 4) AS distance_Plx, "
                   "round(Hipparcos.pmRA, 4), "
                   "round(Hipparcos.pmDE, 4), "
                   "round(Hipparcos.BTmag, 4), "
                   "round(Hipparcos.VTmag, 4), "
                   "round(Hipparcos_product.MV, 4), "
                   "round(Hipparcos_product.MV_error, 4), "
                   "round(Hipparcos_product.MVt, 4), "
                   "round(Hipparcos_product.MVt_error, 4), "
                   "round(Hipparcos_product.B_minus_V, 4), "
                   "round(Hipparcos_product.BT_minus_VT, 4) "
                   "from Hipparcos, Hipparcos_product "
                   "where Hipparcos.HIP = Hipparcos_product.HIP and "
                   "(Hipparcos_product.MVt is NULL or "
                   "Hipparcos_product.BT_minus_VT is NULL) "
                   "order by Hipparcos.HIP")
    value = cursor.fetchall()
    data.append(value)
    data.append(len(value))

    cursor.execute("select Hipparcos.HIP, "
                   "Hipparcos.HD, "
                   "IF (Hipparcos.HIP in ( "
                   "select Gaia.HIP from Gaia where Gaia.HIP is not NULL), "
                   "(select Gaia.designation from Gaia where Gaia.HIP = Hipparcos.HIP), NULL) AS designation, "
                   "round(Hipparcos.Vmag, 4), "
                   "round(Hipparcos.RAdeg, 4), "
                   "round(Hipparcos.DEdeg, 4), "
                   "Hipparcos.RAhms, "
                   "Hipparcos.DEdms, "
                   "round(Hipparcos.Plx, 4), "
                   "round(Hipparcos.e_Plx, 4), "
                   "round(1/(Hipparcos.Plx/1000.0), 4) AS distance_Plx, "
                   "round(Hipparcos.pmRA, 4), "
                   "round(Hipparcos.pmDE, 4), "
                   "round(Hipparcos.BTmag, 4), "
                   "round(Hipparcos.VTmag, 4), "
                   "round(Hipparcos_product.MV, 4), "
                   "round(Hipparcos_product.MV_error, 4), "
                   "round(Hipparcos_product.MVt, 4), "
                   "round(Hipparcos_product.MVt_error, 4), "
                   "round(Hipparcos_product.B_minus_V, 4), "
                   "round(Hipparcos_product.BT_minus_VT, 4) "
                   "from Hipparcos, Hipparcos_product "
                   "where Hipparcos.HIP = Hipparcos_product.HIP "
                   "order by Hipparcos.HIP")
    value = cursor.fetchall()
    data.append(value)

    name = "Hipparcos"
    return render_template("hipparcos.html", data=data, name=name)

@app.route("/gaia_intersection_hipparcos/")
def gaia_intersection_hipparcos():
    data = []
    cursor.execute("select Gaia.designation, "
                   "Gaia.HIP, "
                   "Gaia.HD, "
                   "round(Gaia.ra, 4), "
                   "round(Gaia.declination, 4), "
                   "round(Gaia.parallax, 4), "
                   "round(Gaia.parallax_error, 4), "
                   "round(Gaia.pm, 4), "
                   "round(Gaia.pmra, 4), "
                   "round(Gaia.pmdec, 4), "
                   "round(Gaia.ruwe, 4), "
                   "round(Gaia.phot_g_mean_mag, 4), "
                   "round(Gaia.phot_bp_mean_mag, 4), "
                   "round(Gaia.phot_rp_mean_mag, 4), "
                   "round(Gaia.teff_gspphot, 4), "
                   "round(Gaia.teff_gspphot_lower, 4), "
                   "round(Gaia.teff_gspphot_upper, 4), "
                   "round(Gaia.logg_gspphot, 4), "
                   "round(Gaia.logg_gspphot_lower, 4), "
                   "round(Gaia.logg_gspphot_upper, 4), "
                   "round(Gaia.mh_gspphot, 4), "
                   "round(Gaia.mh_gspphot_lower, 4), "
                   "round(Gaia.mh_gspphot_upper, 4), "
                   "round(Gaia.distance_gspphot, 4), "
                   "round(Gaia.distance_gspphot_lower, 4), "
                   "round(Gaia.distance_gspphot_upper, 4), "
                   "round(Gaia_product.Mg, 4), "
                   "round(Gaia_product.Mg_error, 4), "
                   "round(Gaia_product.MRp, 4), "
                   "round(Gaia_product.MRp_error, 4), "
                   "round(Gaia_product.Bp_minus_Rp, 4), "
                   "round(Hipparcos.Vmag, 4), "
                   "round(Hipparcos.RAdeg, 4), "
                   "round(Hipparcos.DEdeg, 4), "
                   "Hipparcos.RAhms, "
                   "Hipparcos.DEdms, "
                   "round(Hipparcos.Plx, 4), "
                   "round(Hipparcos.e_Plx, 4), "
                   "round(1/(Hipparcos.Plx/1000.0), 4) AS distance_Plx, "
                   "round(Hipparcos.pmRA, 4), "
                   "round(Hipparcos.pmDE, 4), "
                   "round(Hipparcos.BTmag, 4), "
                   "round(Hipparcos.VTmag, 4), "
                   "round(Hipparcos_product.MV, 4), "
                   "round(Hipparcos_product.MV_error, 4), "
                   "round(Hipparcos_product.MVt, 4), "
                   "round(Hipparcos_product.MVt_error, 4), "
                   "round(Hipparcos_product.B_minus_V, 4), "
                   "round(Hipparcos_product.BT_minus_VT, 4) "
                   "from Gaia, Gaia_product, Hipparcos, Hipparcos_product "
                   "where Gaia.designation = Gaia_product.designation and "
                   "Gaia.HIP = Hipparcos.HIP and Hipparcos.HIP = Hipparcos_product.HIP "
                   "order by Gaia.designation")
    value = cursor.fetchall()
    data.append(value)
    data.append(len(value))

    cursor.execute("select Gaia.designation, "
                   "Gaia.HIP, "
                   "Gaia.HD, "
                   "round(Gaia.ra, 4), "
                   "round(Gaia.declination, 4), "
                   "round(Gaia.parallax, 4), "
                   "round(Gaia.parallax_error, 4), "
                   "round(Gaia.pm, 4), "
                   "round(Gaia.pmra, 4), "
                   "round(Gaia.pmdec, 4), "
                   "round(Gaia.ruwe, 4), "
                   "round(Gaia.phot_g_mean_mag, 4), "
                   "round(Gaia.phot_bp_mean_mag, 4), "
                   "round(Gaia.phot_rp_mean_mag, 4), "
                   "round(Gaia.teff_gspphot, 4), "
                   "round(Gaia.teff_gspphot_lower, 4), "
                   "round(Gaia.teff_gspphot_upper, 4), "
                   "round(Gaia.logg_gspphot, 4), "
                   "round(Gaia.logg_gspphot_lower, 4), "
                   "round(Gaia.logg_gspphot_upper, 4), "
                   "round(Gaia.mh_gspphot, 4), "
                   "round(Gaia.mh_gspphot_lower, 4), "
                   "round(Gaia.mh_gspphot_upper, 4), "
                   "round(Gaia.distance_gspphot, 4), "
                   "round(Gaia.distance_gspphot_lower, 4), "
                   "round(Gaia.distance_gspphot_upper, 4), "
                   "round(Gaia_product.Mg, 4), "
                   "round(Gaia_product.Mg_error, 4), "
                   "round(Gaia_product.MRp, 4), "
                   "round(Gaia_product.MRp_error, 4), "
                   "round(Gaia_product.Bp_minus_Rp, 4), "
                   "round(Hipparcos.Vmag, 4), "
                   "round(Hipparcos.RAdeg, 4), "
                   "round(Hipparcos.DEdeg, 4), "
                   "Hipparcos.RAhms, "
                   "Hipparcos.DEdms, "
                   "round(Hipparcos.Plx, 4), "
                   "round(Hipparcos.e_Plx, 4), "
                   "round(1/(Hipparcos.Plx/1000.0), 4) AS distance_Plx, "
                   "round(Hipparcos.pmRA, 4), "
                   "round(Hipparcos.pmDE, 4), "
                   "round(Hipparcos.BTmag, 4), "
                   "round(Hipparcos.VTmag, 4), "
                   "round(Hipparcos_product.MV, 4), "
                   "round(Hipparcos_product.MV_error, 4), "
                   "round(Hipparcos_product.MVt, 4), "
                   "round(Hipparcos_product.MVt_error, 4), "
                   "round(Hipparcos_product.B_minus_V, 4), "
                   "round(Hipparcos_product.BT_minus_VT, 4) "
                   "from Gaia, Gaia_product, Hipparcos, Hipparcos_product "
                   "where Gaia.designation = Gaia_product.designation and "
                   "Gaia.HIP = Hipparcos.HIP and Hipparcos.HIP = Hipparcos_product.HIP and "
                   "Hipparcos_product.MV is not NULL and "
                   "Hipparcos_product.B_minus_V is not NULL "
                   "order by Gaia.designation")
    value = cursor.fetchall()
    data.append(value)
    data.append(len(value))

    cursor.execute("select Gaia.designation, "
                   "Gaia.HIP, "
                   "Gaia.HD, "
                   "round(Gaia.ra, 4), "
                   "round(Gaia.declination, 4), "
                   "round(Gaia.parallax, 4), "
                   "round(Gaia.parallax_error, 4), "
                   "round(Gaia.pm, 4), "
                   "round(Gaia.pmra, 4), "
                   "round(Gaia.pmdec, 4), "
                   "round(Gaia.ruwe, 4), "
                   "round(Gaia.phot_g_mean_mag, 4), "
                   "round(Gaia.phot_bp_mean_mag, 4), "
                   "round(Gaia.phot_rp_mean_mag, 4), "
                   "round(Gaia.teff_gspphot, 4), "
                   "round(Gaia.teff_gspphot_lower, 4), "
                   "round(Gaia.teff_gspphot_upper, 4), "
                   "round(Gaia.logg_gspphot, 4), "
                   "round(Gaia.logg_gspphot_lower, 4), "
                   "round(Gaia.logg_gspphot_upper, 4), "
                   "round(Gaia.mh_gspphot, 4), "
                   "round(Gaia.mh_gspphot_lower, 4), "
                   "round(Gaia.mh_gspphot_upper, 4), "
                   "round(Gaia.distance_gspphot, 4), "
                   "round(Gaia.distance_gspphot_lower, 4), "
                   "round(Gaia.distance_gspphot_upper, 4), "
                   "round(Gaia_product.Mg, 4), "
                   "round(Gaia_product.Mg_error, 4), "
                   "round(Gaia_product.MRp, 4), "
                   "round(Gaia_product.MRp_error, 4), "
                   "round(Gaia_product.Bp_minus_Rp, 4), "
                   "round(Hipparcos.Vmag, 4), "
                   "round(Hipparcos.RAdeg, 4), "
                   "round(Hipparcos.DEdeg, 4), "
                   "Hipparcos.RAhms, "
                   "Hipparcos.DEdms, "
                   "round(Hipparcos.Plx, 4), "
                   "round(Hipparcos.e_Plx, 4), "
                   "round(1/(Hipparcos.Plx/1000.0), 4) AS distance_Plx, "
                   "round(Hipparcos.pmRA, 4), "
                   "round(Hipparcos.pmDE, 4), "
                   "round(Hipparcos.BTmag, 4), "
                   "round(Hipparcos.VTmag, 4), "
                   "round(Hipparcos_product.MV, 4), "
                   "round(Hipparcos_product.MV_error, 4), "
                   "round(Hipparcos_product.MVt, 4), "
                   "round(Hipparcos_product.MVt_error, 4), "
                   "round(Hipparcos_product.B_minus_V, 4), "
                   "round(Hipparcos_product.BT_minus_VT, 4) "
                   "from Gaia, Gaia_product, Hipparcos, Hipparcos_product "
                   "where Gaia.designation = Gaia_product.designation and "
                   "Gaia.HIP = Hipparcos.HIP and Hipparcos.HIP = Hipparcos_product.HIP and "
                   "(Hipparcos_product.MV is NULL or "
                   "Hipparcos_product.B_minus_V is NULL) "
                   "order by Gaia.designation")
    value = cursor.fetchall()
    data.append(value)
    data.append(len(value))

    cursor.execute("select Gaia.designation, "
                   "Gaia.HIP, "
                   "Gaia.HD, "
                   "round(Gaia.ra, 4), "
                   "round(Gaia.declination, 4), "
                   "round(Gaia.parallax, 4), "
                   "round(Gaia.parallax_error, 4), "
                   "round(Gaia.pm, 4), "
                   "round(Gaia.pmra, 4), "
                   "round(Gaia.pmdec, 4), "
                   "round(Gaia.ruwe, 4), "
                   "round(Gaia.phot_g_mean_mag, 4), "
                   "round(Gaia.phot_bp_mean_mag, 4), "
                   "round(Gaia.phot_rp_mean_mag, 4), "
                   "round(Gaia.teff_gspphot, 4), "
                   "round(Gaia.teff_gspphot_lower, 4), "
                   "round(Gaia.teff_gspphot_upper, 4), "
                   "round(Gaia.logg_gspphot, 4), "
                   "round(Gaia.logg_gspphot_lower, 4), "
                   "round(Gaia.logg_gspphot_upper, 4), "
                   "round(Gaia.mh_gspphot, 4), "
                   "round(Gaia.mh_gspphot_lower, 4), "
                   "round(Gaia.mh_gspphot_upper, 4), "
                   "round(Gaia.distance_gspphot, 4), "
                   "round(Gaia.distance_gspphot_lower, 4), "
                   "round(Gaia.distance_gspphot_upper, 4), "
                   "round(Gaia_product.Mg, 4), "
                   "round(Gaia_product.Mg_error, 4), "
                   "round(Gaia_product.MRp, 4), "
                   "round(Gaia_product.MRp_error, 4), "
                   "round(Gaia_product.Bp_minus_Rp, 4), "
                   "round(Hipparcos.Vmag, 4), "
                   "round(Hipparcos.RAdeg, 4), "
                   "round(Hipparcos.DEdeg, 4), "
                   "Hipparcos.RAhms, "
                   "Hipparcos.DEdms, "
                   "round(Hipparcos.Plx, 4), "
                   "round(Hipparcos.e_Plx, 4), "
                   "round(1/(Hipparcos.Plx/1000.0), 4) AS distance_Plx, "
                   "round(Hipparcos.pmRA, 4), "
                   "round(Hipparcos.pmDE, 4), "
                   "round(Hipparcos.BTmag, 4), "
                   "round(Hipparcos.VTmag, 4), "
                   "round(Hipparcos_product.MV, 4), "
                   "round(Hipparcos_product.MV_error, 4), "
                   "round(Hipparcos_product.MVt, 4), "
                   "round(Hipparcos_product.MVt_error, 4), "
                   "round(Hipparcos_product.B_minus_V, 4), "
                   "round(Hipparcos_product.BT_minus_VT, 4) "
                   "from Gaia, Gaia_product, Hipparcos, Hipparcos_product "
                   "where Gaia.designation = Gaia_product.designation and "
                   "Gaia.HIP = Hipparcos.HIP and Hipparcos.HIP = Hipparcos_product.HIP and "
                   "Hipparcos_product.MVt is not NULL and "
                   "Hipparcos_product.BT_minus_VT is not NULL "
                   "order by Gaia.designation")
    value = cursor.fetchall()
    data.append(value)
    data.append(len(value))

    cursor.execute("select Gaia.designation, "
                   "Gaia.HIP, "
                   "Gaia.HD, "
                   "round(Gaia.ra, 4), "
                   "round(Gaia.declination, 4), "
                   "round(Gaia.parallax, 4), "
                   "round(Gaia.parallax_error, 4), "
                   "round(Gaia.pm, 4), "
                   "round(Gaia.pmra, 4), "
                   "round(Gaia.pmdec, 4), "
                   "round(Gaia.ruwe, 4), "
                   "round(Gaia.phot_g_mean_mag, 4), "
                   "round(Gaia.phot_bp_mean_mag, 4), "
                   "round(Gaia.phot_rp_mean_mag, 4), "
                   "round(Gaia.teff_gspphot, 4), "
                   "round(Gaia.teff_gspphot_lower, 4), "
                   "round(Gaia.teff_gspphot_upper, 4), "
                   "round(Gaia.logg_gspphot, 4), "
                   "round(Gaia.logg_gspphot_lower, 4), "
                   "round(Gaia.logg_gspphot_upper, 4), "
                   "round(Gaia.mh_gspphot, 4), "
                   "round(Gaia.mh_gspphot_lower, 4), "
                   "round(Gaia.mh_gspphot_upper, 4), "
                   "round(Gaia.distance_gspphot, 4), "
                   "round(Gaia.distance_gspphot_lower, 4), "
                   "round(Gaia.distance_gspphot_upper, 4), "
                   "round(Gaia_product.Mg, 4), "
                   "round(Gaia_product.Mg_error, 4), "
                   "round(Gaia_product.MRp, 4), "
                   "round(Gaia_product.MRp_error, 4), "
                   "round(Gaia_product.Bp_minus_Rp, 4), "
                   "round(Hipparcos.Vmag, 4), "
                   "round(Hipparcos.RAdeg, 4), "
                   "round(Hipparcos.DEdeg, 4), "
                   "Hipparcos.RAhms, "
                   "Hipparcos.DEdms, "
                   "round(Hipparcos.Plx, 4), "
                   "round(Hipparcos.e_Plx, 4), "
                   "round(1/(Hipparcos.Plx/1000.0), 4) AS distance_Plx, "
                   "round(Hipparcos.pmRA, 4), "
                   "round(Hipparcos.pmDE, 4), "
                   "round(Hipparcos.BTmag, 4), "
                   "round(Hipparcos.VTmag, 4), "
                   "round(Hipparcos_product.MV, 4), "
                   "round(Hipparcos_product.MV_error, 4), "
                   "round(Hipparcos_product.MVt, 4), "
                   "round(Hipparcos_product.MVt_error, 4), "
                   "round(Hipparcos_product.B_minus_V, 4), "
                   "round(Hipparcos_product.BT_minus_VT, 4) "
                   "from Gaia, Gaia_product, Hipparcos, Hipparcos_product "
                   "where Gaia.designation = Gaia_product.designation and "
                   "Gaia.HIP = Hipparcos.HIP and Hipparcos.HIP = Hipparcos_product.HIP and "
                   "(Hipparcos_product.MVt is NULL or "
                   "Hipparcos_product.BT_minus_VT is NULL) "
                   "order by Gaia.designation")
    value = cursor.fetchall()
    data.append(value)
    data.append(len(value))
    name = "Gaia ∩ Hipparcos"
    return render_template("gaia_intersection_hipparcos.html", data=data, name=name)

@app.route("/gaia_minus_hipparcos/")
def gaia_minus_hipparcos():
    data = []
    cursor.execute("select Gaia.designation, "
                   "Gaia.HD, "
                   "Gaia.HIP, "
                   "round(Gaia.ra, 4), "
                   "round(Gaia.declination, 4), "
                   "round(Gaia.parallax, 4), "
                   "round(Gaia.parallax_error, 4), "
                   "round(Gaia.pm, 4), "
                   "round(Gaia.pmra, 4), "
                   "round(Gaia.pmdec, 4), "
                   "round(Gaia.ruwe, 4), "
                   "round(Gaia.phot_g_mean_mag, 4), "
                   "round(Gaia.phot_bp_mean_mag, 4), "
                   "round(Gaia.phot_rp_mean_mag, 4), "
                   "round(Gaia.teff_gspphot, 4), "
                   "round(Gaia.teff_gspphot_lower, 4), "
                   "round(Gaia.teff_gspphot_upper, 4), "
                   "round(Gaia.logg_gspphot, 4), "
                   "round(Gaia.logg_gspphot_lower, 4), "
                   "round(Gaia.logg_gspphot_upper, 4), "
                   "round(Gaia.mh_gspphot, 4), "
                   "round(Gaia.mh_gspphot_lower, 4), "
                   "round(Gaia.mh_gspphot_upper, 4), "
                   "round(Gaia.distance_gspphot, 4), "
                   "round(Gaia.distance_gspphot_lower, 4), "
                   "round(Gaia.distance_gspphot_upper, 4), "
                   "round(Gaia_product.Mg, 4), "
                   "round(Gaia_product.Mg_error, 4), "
                   "round(Gaia_product.MRp, 4), "
                   "round(Gaia_product.MRp_error, 4), "
                   "round(Gaia_product.Bp_minus_Rp, 4) "
                   "from Gaia, Gaia_product "
                   "where Gaia.designation = Gaia_product.designation and "
                   "Gaia.HIP is NULL "
                   "order by Gaia.designation")
    value = cursor.fetchall()
    data.append(value)
    data.append(len(value))

    cursor.execute("select Gaia.designation, "
                   "Gaia.HD, "
                   "Gaia.HIP, "
                   "round(Gaia.ra, 4), "
                   "round(Gaia.declination, 4), "
                   "round(Gaia.parallax, 4), "
                   "round(Gaia.parallax_error, 4), "
                   "round(Gaia.pm, 4), "
                   "round(Gaia.pmra, 4), "
                   "round(Gaia.pmdec, 4), "
                   "round(Gaia.ruwe, 4), "
                   "round(Gaia.phot_g_mean_mag, 4), "
                   "round(Gaia.phot_bp_mean_mag, 4), "
                   "round(Gaia.phot_rp_mean_mag, 4), "
                   "round(Gaia.teff_gspphot, 4), "
                   "round(Gaia.teff_gspphot_lower, 4), "
                   "round(Gaia.teff_gspphot_upper, 4), "
                   "round(Gaia.logg_gspphot, 4), "
                   "round(Gaia.logg_gspphot_lower, 4), "
                   "round(Gaia.logg_gspphot_upper, 4), "
                   "round(Gaia.mh_gspphot, 4), "
                   "round(Gaia.mh_gspphot_lower, 4), "
                   "round(Gaia.mh_gspphot_upper, 4), "
                   "round(Gaia.distance_gspphot, 4), "
                   "round(Gaia.distance_gspphot_lower, 4), "
                   "round(Gaia.distance_gspphot_upper, 4), "
                   "round(Gaia_product.Mg, 4), "
                   "round(Gaia_product.Mg_error, 4), "
                   "round(Gaia_product.MRp, 4), "
                   "round(Gaia_product.MRp_error, 4), "
                   "round(Gaia_product.Bp_minus_Rp, 4) "
                   "from Gaia, Gaia_product "
                   "where Gaia.designation = Gaia_product.designation and "
                   "Gaia.HIP is NULL and "
                   "Gaia_product.Bp_minus_Rp <= 1.6 "
                   "order by Gaia_product.Bp_minus_Rp desc")
    value = cursor.fetchall()
    data.append(value)
    data.append(len(value))

    cursor.execute("select Gaia.designation, "
                   "Gaia.HD, "
                   "Gaia.HIP, "
                   "round(Gaia.ra, 4), "
                   "round(Gaia.declination, 4), "
                   "round(Gaia.parallax, 4), "
                   "round(Gaia.parallax_error, 4), "
                   "round(Gaia.pm, 4), "
                   "round(Gaia.pmra, 4), "
                   "round(Gaia.pmdec, 4), "
                   "round(Gaia.ruwe, 4), "
                   "round(Gaia.phot_g_mean_mag, 4), "
                   "round(Gaia.phot_bp_mean_mag, 4), "
                   "round(Gaia.phot_rp_mean_mag, 4), "
                   "round(Gaia.teff_gspphot, 4), "
                   "round(Gaia.teff_gspphot_lower, 4), "
                   "round(Gaia.teff_gspphot_upper, 4), "
                   "round(Gaia.logg_gspphot, 4), "
                   "round(Gaia.logg_gspphot_lower, 4), "
                   "round(Gaia.logg_gspphot_upper, 4), "
                   "round(Gaia.mh_gspphot, 4), "
                   "round(Gaia.mh_gspphot_lower, 4), "
                   "round(Gaia.mh_gspphot_upper, 4), "
                   "round(Gaia.distance_gspphot, 4), "
                   "round(Gaia.distance_gspphot_lower, 4), "
                   "round(Gaia.distance_gspphot_upper, 4), "
                   "round(Gaia_product.Mg, 4), "
                   "round(Gaia_product.Mg_error, 4), "
                   "round(Gaia_product.MRp, 4), "
                   "round(Gaia_product.MRp_error, 4), "
                   "round(Gaia_product.Bp_minus_Rp, 4) "
                   "from Gaia, Gaia_product "
                   "where Gaia.designation = Gaia_product.designation and "
                   "Gaia.HIP is NULL and "
                   "Gaia_product.Bp_minus_Rp > 1.6 "
                   "order by Gaia_product.Bp_minus_Rp")
    value = cursor.fetchall()
    data.append(value)
    data.append(len(value))

    name = "Gaia - Hipparcos"
    return render_template("gaia_minus_hipparcos.html", data=data, name=name)

@app.route("/hipparcos_minus_gaia/")
def hipparcos_minus_gaia():
    data = []
    cursor.execute("select Hipparcos.HIP, "
                   "Hipparcos.HD, "
                   "IF (Hipparcos.HIP in ( "
                   "select Gaia.HIP from Gaia where Gaia.HIP is not NULL), "
                   "(select Gaia.designation from Gaia where Gaia.HIP = Hipparcos.HIP), NULL) AS designation, "
                   "round(Hipparcos.Vmag, 4), "
                   "round(Hipparcos.RAdeg, 4), "
                   "round(Hipparcos.DEdeg, 4), "
                   "Hipparcos.RAhms, "
                   "Hipparcos.DEdms, "
                   "round(Hipparcos.Plx, 4), "
                   "round(Hipparcos.e_Plx, 4), "
                   "round(1/(Hipparcos.Plx/1000.0), 4) AS distance_Plx, "
                   "round(Hipparcos.pmRA, 4), "
                   "round(Hipparcos.pmDE, 4), "
                   "round(Hipparcos.BTmag, 4), "
                   "round(Hipparcos.VTmag, 4), "
                   "round(Hipparcos_product.MV, 4), "
                   "round(Hipparcos_product.MV_error, 4), "
                   "round(Hipparcos_product.MVt, 4), "
                   "round(Hipparcos_product.MVt_error, 4), "
                   "round(Hipparcos_product.B_minus_V, 4), "
                   "round(Hipparcos_product.BT_minus_VT, 4) "
                   "from Hipparcos, Hipparcos_product "
                   "where Hipparcos.HIP = Hipparcos_product.HIP and "
                   "Hipparcos_product.MV is not NULL and "
                   "Hipparcos_product.B_minus_V is not NULL and "
                   "Hipparcos.HIP not in( "
                   "select Gaia.HIP from Gaia where Gaia.HIP is not NULL) "
                   "order by distance_Plx DESC")
    value = cursor.fetchall()
    data.append(value)
    data.append(len(value))

    cursor.execute("select Hipparcos.HIP, "
                   "Hipparcos.HD, "
                   "IF (Hipparcos.HIP in ( "
                   "select Gaia.HIP from Gaia where Gaia.HIP is not NULL), "
                   "(select Gaia.designation from Gaia where Gaia.HIP = Hipparcos.HIP), NULL) AS designation, "
                   "round(Hipparcos.Vmag, 4), "
                   "round(Hipparcos.RAdeg, 4), "
                   "round(Hipparcos.DEdeg, 4), "
                   "Hipparcos.RAhms, "
                   "Hipparcos.DEdms, "
                   "round(Hipparcos.Plx, 4), "
                   "round(Hipparcos.e_Plx, 4), "
                   "round(1/(Hipparcos.Plx/1000.0), 4) AS distance_Plx, "
                   "round(Hipparcos.pmRA, 4), "
                   "round(Hipparcos.pmDE, 4), "
                   "round(Hipparcos.BTmag, 4), "
                   "round(Hipparcos.VTmag, 4), "
                   "round(Hipparcos_product.MV, 4), "
                   "round(Hipparcos_product.MV_error, 4), "
                   "round(Hipparcos_product.MVt, 4), "
                   "round(Hipparcos_product.MVt_error, 4), "
                   "round(Hipparcos_product.B_minus_V, 4), "
                   "round(Hipparcos_product.BT_minus_VT, 4) "
                   "from Hipparcos, Hipparcos_product "
                   "where Hipparcos.HIP = Hipparcos_product.HIP and "
                   "(Hipparcos_product.MV is NULL or "
                   "Hipparcos_product.B_minus_V is NULL) and "
                   "Hipparcos.HIP not in ( "
                   "select Gaia.HIP from Gaia where Gaia.HIP is not NULL) "
                   "order by distance_Plx DESC")
    value = cursor.fetchall()
    data.append(value)
    data.append(len(value))

    cursor.execute("select Hipparcos.HIP, "
                   "Hipparcos.HD, "
                   "IF (Hipparcos.HIP in ( "
                   "select Gaia.HIP from Gaia where Gaia.HIP is not NULL), "
                   "(select Gaia.designation from Gaia where Gaia.HIP = Hipparcos.HIP), NULL) AS designation, "
                   "round(Hipparcos.Vmag, 4), "
                   "round(Hipparcos.RAdeg, 4), "
                   "round(Hipparcos.DEdeg, 4), "
                   "Hipparcos.RAhms, "
                   "Hipparcos.DEdms, "
                   "round(Hipparcos.Plx, 4), "
                   "round(Hipparcos.e_Plx, 4), "
                   "round(1/(Hipparcos.Plx/1000.0), 4) AS distance_Plx, "
                   "round(Hipparcos.pmRA, 4), "
                   "round(Hipparcos.pmDE, 4), "
                   "round(Hipparcos.BTmag, 4), "
                   "round(Hipparcos.VTmag, 4), "
                   "round(Hipparcos_product.MV, 4), "
                   "round(Hipparcos_product.MV_error, 4), "
                   "round(Hipparcos_product.MVt, 4), "
                   "round(Hipparcos_product.MVt_error, 4), "
                   "round(Hipparcos_product.B_minus_V, 4), "
                   "round(Hipparcos_product.BT_minus_VT, 4) "
                   "from Hipparcos, Hipparcos_product "
                   "where Hipparcos.HIP = Hipparcos_product.HIP and "
                   "Hipparcos_product.MVt is not NULL and "
                   "Hipparcos_product.BT_minus_VT is not NULL and "
                   "Hipparcos.HIP not in( "
                   "select Gaia.HIP from Gaia where Gaia.HIP is not NULL) "
                   "order by distance_Plx DESC")
    value = cursor.fetchall()
    data.append(value)
    data.append(len(value))

    cursor.execute("select Hipparcos.HIP, "
                   "Hipparcos.HD, "
                   "IF (Hipparcos.HIP in ( "
                   "select Gaia.HIP from Gaia where Gaia.HIP is not NULL), "
                   "(select Gaia.designation from Gaia where Gaia.HIP = Hipparcos.HIP), NULL) AS designation, "
                   "round(Hipparcos.Vmag, 4), "
                   "round(Hipparcos.RAdeg, 4), "
                   "round(Hipparcos.DEdeg, 4), "
                   "Hipparcos.RAhms, "
                   "Hipparcos.DEdms, "
                   "round(Hipparcos.Plx, 4), "
                   "round(Hipparcos.e_Plx, 4), "
                   "round(1/(Hipparcos.Plx/1000.0), 4) AS distance_Plx, "
                   "round(Hipparcos.pmRA, 4), "
                   "round(Hipparcos.pmDE, 4), "
                   "round(Hipparcos.BTmag, 4), "
                   "round(Hipparcos.VTmag, 4), "
                   "round(Hipparcos_product.MV, 4), "
                   "round(Hipparcos_product.MV_error, 4), "
                   "round(Hipparcos_product.MVt, 4), "
                   "round(Hipparcos_product.MVt_error, 4), "
                   "round(Hipparcos_product.B_minus_V, 4), "
                   "round(Hipparcos_product.BT_minus_VT, 4) "
                   "from Hipparcos, Hipparcos_product "
                   "where Hipparcos.HIP = Hipparcos_product.HIP and "
                   "(Hipparcos_product.MVt is NULL or "
                   "Hipparcos_product.BT_minus_VT is NULL) and "
                   "Hipparcos.HIP not in( "
                   "select Gaia.HIP from Gaia where Gaia.HIP is not NULL) "
                   "order by distance_Plx DESC")
    value = cursor.fetchall()
    data.append(value)
    data.append(len(value))

    name = "Hipparcos - Gaia"
    return render_template("hipparcos_minus_gaia.html", data=data, name=name)

if __name__ == "__main__":
    app.run(debug=True)

